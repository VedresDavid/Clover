#pragma checksum "C:\Users\f\Desktop\Clover\Clover\Pages\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ea4c4ede37a245d506950759829f12fc9e8ab94e"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Clover.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Clover;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Clover.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Clover.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Clover.Data.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Data.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Blazored;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\f\Desktop\Clover\Clover\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 105 "C:\Users\f\Desktop\Clover\Clover\Pages\Index.razor"
       
    public bool isNewCaseAdded = false;

    public CaseOrderEnum caseOrder = CaseOrderEnum.CaseNumberAscending;

    public string searchText = "";

    public int deleteAllCasesCounter = 10;

    //makes the case number validation error not pop up on page load
    public bool isAddCaseClicked = false;

    public Case newCase = new Case();

    public List<Case> cases = new List<Case>();

    //runs when the page loads
    protected override async Task OnInitializedAsync()
    {
        await GetCases();
        await localization.GetLocalizations();
    }

    public async Task OrderByCaseNumber()
    {
        if (caseOrder == CaseOrderEnum.CaseNumberAscending)
        {
            FlipOrder();
            await GetCases();
        }
        else
        {
            caseOrder = CaseOrderEnum.CaseNumberAscending;
            await GetCases();
        }
    }

    public async Task OrderByNumberOfItems()
    {
        if (caseOrder == CaseOrderEnum.NumberOfItemsAscending)
        {
            FlipOrder();
            await GetCases();
        }
        else
        {
            caseOrder = CaseOrderEnum.NumberOfItemsAscending;
            await GetCases();
        }
    }

    public async Task OrderBySum()
    {
        if (caseOrder == CaseOrderEnum.SumAscending)
        {
            FlipOrder();
            await GetCases();
        }
        else
        {
            caseOrder = CaseOrderEnum.SumAscending;
            await GetCases();
        }
    }

    public async Task OrderByComment()
    {
        if (caseOrder == CaseOrderEnum.CommentAscending)
        {
            FlipOrder();
            await GetCases();
        }
        else
        {
            caseOrder = CaseOrderEnum.CommentAscending;
            await GetCases();
        }
    }

    public void ModifyCase(Case _case)
    {
        var parameters = new ModalParameters();
        parameters.Add("_case", _case);
        modalService.Show<ModifyCaseModal>(localization.localizations.Modify, parameters);
        modalService.OnClose += ModifyCaseModalClosed;
    }

    public void ModifyCaseModalClosed(ModalResult result)
    {
        GetCases();
        this.StateHasChanged();
        modalService.OnClose -= ModifyCaseModalClosed;
    }

    public void FlipOrder()
    {
        switch (caseOrder)
        {
            case CaseOrderEnum.CaseNumberAscending:
                caseOrder = CaseOrderEnum.CaseNumberDescending;
                break;
            case CaseOrderEnum.NumberOfItemsAscending:
                caseOrder = CaseOrderEnum.NumberOfItemsDescending;
                break;
            case CaseOrderEnum.SumAscending:
                caseOrder = CaseOrderEnum.SumDescending;
                break;
            case CaseOrderEnum.CommentAscending:
                caseOrder = CaseOrderEnum.CommentDescending;
                break;
            case CaseOrderEnum.CaseNumberDescending:
                caseOrder = CaseOrderEnum.CaseNumberAscending;
                break;
            case CaseOrderEnum.NumberOfItemsDescending:
                caseOrder = CaseOrderEnum.NumberOfItemsAscending;
                break;
            case CaseOrderEnum.SumDescending:
                caseOrder = CaseOrderEnum.SumAscending;
                break;
            case CaseOrderEnum.CommentDescending:
                caseOrder = CaseOrderEnum.CommentAscending;
                break;
            default:
                caseOrder = CaseOrderEnum.CaseNumberAscending;
                break;
        }
    }

    public async Task GetCases()
    {
        cases = await caseService.GetCases(caseOrder, searchText);
    }

    public void OpenItems(string caseNumber)
    {
        navigationManager.NavigateTo($"/items/{caseNumber}");
    }

    public async Task CreateCase()
    {
        isAddCaseClicked = true;
        if (!(string.IsNullOrWhiteSpace(newCase.CaseNumber) || !CaseService.IsCaseNameValid(newCase.CaseNumber)))
        {
            isNewCaseAdded = true;
            await caseService.CreateCase(newCase);
        }
        else
        {
            isNewCaseAdded = false;
        }
        await GetCases();
    }

    public async Task DeleteCase(string caseNumber)
    {
        await caseService.DeleteCase(caseNumber);
        await GetCases();
    }

    public async Task DeleteAllCases()
    {
        if (deleteAllCasesCounter >= 1)
        {
            deleteAllCasesCounter--;
            return;
        }
        deleteAllCasesCounter = 10;
        await caseService.DeleteAllCases();
        await GetCases();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IModalService modalService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ItemService itemService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private CaseService caseService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private LocalizationService localization { get; set; }
    }
}
#pragma warning restore 1591
